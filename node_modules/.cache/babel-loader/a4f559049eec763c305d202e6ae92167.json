{"ast":null,"code":"import \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nvar _jsxFileName = \"/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/uploadImage.js\";\nimport React from \"react\"; //\n// import {\n//     Form,\n//     Select,\n//     InputNumber,\n//     Switch,\n//     Radio,\n//     Slider,\n//     Button,\n//     Upload,\n//     Icon,\n//     Rate,\n//     Checkbox,\n//     Row,\n//     Col,\n//     Card,\n// } from 'antd';\n//\n// const { Option } = Select;\n// const { Meta } = Card;\n//\n// class Demo extends React.Component {\n//     handleSubmit = e => {\n//         e.preventDefault();\n//         this.props.form.validateFields((err, values) => {\n//             if (!err) {\n//                 console.log('Received values of form: ', values);\n//             }\n//         });\n//     };\n//\n//     normFile = e => {\n//         console.log('Upload event:', e);\n//         if (Array.isArray(e)) {\n//             return e;\n//         }\n//         return e && e.fileList;\n//     };\n//\n//     render() {\n//         const { getFieldDecorator } = this.props.form;\n//         const formItemLayout = {\n//             labelCol: { span: 6 },\n//             wrapperCol: { span: 14 },\n//         };\n//         return (\n//             <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n//                 <Form.Item label=\"上传图片\">\n//                     {getFieldDecorator('dragger', {\n//                         valuePropName: 'fileList',\n//                         getValueFromEvent: this.normFile,\n//                     })(\n//                         <Upload.Dragger name=\"files\" action=\"/upload.do\">\n//                             <p className=\"ant-upload-drag-icon\">\n//                                 <Icon type=\"inbox\" />\n//                             </p>\n//                             <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n//                         </Upload.Dragger>,\n//                     )}\n//                 </Form.Item>\n//\n//                 <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n//                     <Button type=\"primary\" htmlType=\"submit\">\n//                         Submit\n//                     </Button>\n//                 </Form.Item>\n//                 <div style={{ background: '#ECECEC', padding: '30px' }}>\n//                     <Card title=\"颜值得分\" bordered={false} style={{ width: 300 }}>\n//                         <p>Card content</p>\n//                     </Card>\n//                 </div>\n//\n//             </Form>\n//         );\n//     }\n// }\n\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nconst Dragger = _Upload.Dragger;\nconst props = {\n  name: 'file',\n  multiple: true,\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\n  onChange(info) {\n    const status = info.file.status;\n\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n\n    if (status === 'done') {\n      _message.success(\"\".concat(info.file.name, \" file uploaded successfully.\"));\n    } else if (status === 'error') {\n      _message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n    }\n  }\n\n};\nReactDOM.render(React.createElement(Dragger, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  className: \"ant-upload-drag-icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, React.createElement(_Icon, {\n  type: \"inbox\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n})), React.createElement(\"p\", {\n  className: \"ant-upload-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n  className: \"ant-upload-hint\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\")), document.getElementById('container')); // ReactDOM.render(<PicturesWall />, mountNode);\n\nconst WrappedDemo = _Upload.create({\n  name: 'validate_other'\n})(Demo);\n\nexport default WrappedDemo;","map":{"version":3,"sources":["/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/uploadImage.js"],"names":["React","ReactDOM","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","fileList","success","error","render","document","getElementById","WrappedDemo","create","Demo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAO,aAAP;MAGQC,O,WAAAA,O;AAER,MAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,MADI;AAEVC,EAAAA,QAAQ,EAAE,IAFA;AAGVC,EAAAA,MAAM,EAAE,kDAHE;;AAIVC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AAAA,UACHC,MADG,GACQD,IAAI,CAACE,IADb,CACHD,MADG;;AAEX,QAAIA,MAAM,KAAK,WAAf,EAA4B;AACxBE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB,EAAuBF,IAAI,CAACK,QAA5B;AACH;;AACD,QAAIJ,MAAM,KAAK,MAAf,EAAuB;AACnB,eAAQK,OAAR,WAAmBN,IAAI,CAACE,IAAL,CAAUN,IAA7B;AACH,KAFD,MAEO,IAAIK,MAAM,KAAK,OAAf,EAAwB;AAC3B,eAAQM,KAAR,WAAiBP,IAAI,CAACE,IAAL,CAAUN,IAA3B;AACH;AACJ;;AAdS,CAAd;AAiBAH,QAAQ,CAACe,MAAT,CACI,oBAAC,OAAD,oBAAab,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACI;AAAG,EAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAM,EAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAII;AAAG,EAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAJJ,EAKI;AAAG,EAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GALJ,CADJ,EAWIc,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAXJ,E,CAeA;;AACA,MAAMC,WAAW,GAAG,QAAOC,MAAP,CAAc;AAAEhB,EAAAA,IAAI,EAAE;AAAR,CAAd,EAA0CiB,IAA1C,CAApB;;AACA,eAAeF,WAAf","sourcesContent":["import React from \"react\";\n//\n// import {\n//     Form,\n//     Select,\n//     InputNumber,\n//     Switch,\n//     Radio,\n//     Slider,\n//     Button,\n//     Upload,\n//     Icon,\n//     Rate,\n//     Checkbox,\n//     Row,\n//     Col,\n//     Card,\n// } from 'antd';\n//\n// const { Option } = Select;\n// const { Meta } = Card;\n//\n// class Demo extends React.Component {\n//     handleSubmit = e => {\n//         e.preventDefault();\n//         this.props.form.validateFields((err, values) => {\n//             if (!err) {\n//                 console.log('Received values of form: ', values);\n//             }\n//         });\n//     };\n//\n//     normFile = e => {\n//         console.log('Upload event:', e);\n//         if (Array.isArray(e)) {\n//             return e;\n//         }\n//         return e && e.fileList;\n//     };\n//\n//     render() {\n//         const { getFieldDecorator } = this.props.form;\n//         const formItemLayout = {\n//             labelCol: { span: 6 },\n//             wrapperCol: { span: 14 },\n//         };\n//         return (\n//             <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n//                 <Form.Item label=\"上传图片\">\n//                     {getFieldDecorator('dragger', {\n//                         valuePropName: 'fileList',\n//                         getValueFromEvent: this.normFile,\n//                     })(\n//                         <Upload.Dragger name=\"files\" action=\"/upload.do\">\n//                             <p className=\"ant-upload-drag-icon\">\n//                                 <Icon type=\"inbox\" />\n//                             </p>\n//                             <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n//                         </Upload.Dragger>,\n//                     )}\n//                 </Form.Item>\n//\n//                 <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n//                     <Button type=\"primary\" htmlType=\"submit\">\n//                         Submit\n//                     </Button>\n//                 </Form.Item>\n//                 <div style={{ background: '#ECECEC', padding: '30px' }}>\n//                     <Card title=\"颜值得分\" bordered={false} style={{ width: 300 }}>\n//                         <p>Card content</p>\n//                     </Card>\n//                 </div>\n//\n//             </Form>\n//         );\n//     }\n// }\n\n\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Upload, Icon, message } from 'antd';\n\nconst { Dragger } = Upload;\n\nconst props = {\n    name: 'file',\n    multiple: true,\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    onChange(info) {\n        const { status } = info.file;\n        if (status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully.`);\n        } else if (status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    },\n};\n\nReactDOM.render(\n    <Dragger {...props}>\n        <p className=\"ant-upload-drag-icon\">\n            <Icon type=\"inbox\" />\n        </p>\n        <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n        <p className=\"ant-upload-hint\">\n            Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n            band files\n        </p>\n    </Dragger>,\n    document.getElementById('container'),\n);\n\n\n// ReactDOM.render(<PicturesWall />, mountNode);\nconst WrappedDemo = Upload.create({ name: 'validate_other' })(Demo);\nexport default WrappedDemo;"]},"metadata":{},"sourceType":"module"}
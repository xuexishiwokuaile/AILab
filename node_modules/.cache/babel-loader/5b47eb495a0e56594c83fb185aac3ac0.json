{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/tagImage.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport reqwest from 'reqwest';\n//定义后台返回数据类型\nlet responseData = {};\nlet img = {\n  imgUrl: ''\n};\nconst Option = _Select.Option;\nconst Meta = _Card.Meta;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nfunction load() {\n  document.getElementById(\"p1\").innerHTML = responseData.messageDetail.image_detial.root;\n  document.getElementById(\"p2\").innerHTML = responseData.messageDetail.image_detial.keyword;\n  alert(responseData.messageDetail.file_url);\n  document.getElementById(\"img1\").src = responseData.messageDetail.file_url;\n}\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n  }\n\n  handleClick() {\n    img.imgUrl = '';\n    alert(img.imgUrl);\n  }\n\n  render() {\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: this.state.loading ? 'loading' : 'plus',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\"));\n    const imageUrl = this.state.imageUrl;\n    const props = {\n      name: \"avatar\",\n      showUploadList: false,\n      //设置只上传一张图片，根据实际情况修改\n      customRequest: info => {\n        //手动上传\n        const formData = new FormData();\n        formData.append('filename', info.file); //名字和后端接口名字对应\n\n        formData.append('recognize_type', \"1\");\n        reqwest({\n          url: 'http://192.168.1.100:8000/image_recognize/',\n          //上传url\n          method: 'post',\n          processData: false,\n          data: formData,\n          success: res => {\n            //上传成功回调\n            _message.success(\"success\");\n\n            var data = JSON.parse(res);\n            console.log(data);\n            responseData = data;\n            console.log(\"------\");\n            console.log(responseData);\n            console.log(responseData.keyword);\n            load();\n          },\n          error: () => {\n            //上传失败回调\n            _message.error('上传失败！');\n          }\n        });\n      },\n      onRemove: file => {\n        //删除图片调用\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      beforeUpload: file => {\n        //控制上传图片格式\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n        if (!isJpgOrPng) {\n          _message.error('您只能上传JPG/PNG 文件!');\n\n          return;\n        }\n\n        const isLt2M = file.size / 1024 / 1024 < 2;\n\n        if (!isLt2M) {\n          _message.error('图片大小必须小于2MB!');\n\n          return;\n        }\n\n        return isJpgOrPng && isLt2M;\n      }\n    };\n    return React.createElement(\"div\", {\n      style: {\n        marginLeft: 600\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(_Upload, Object.assign({}, props, {\n      listType: \"picture-card\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), img.imgUrl ? React.createElement(\"img\", {\n      id: \"img1\",\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }) : uploadButton), React.createElement(_Card, {\n      title: \"\\u8FD9\\u5F20\\u56FE\\u7247\\u7684\\u6807\\u7B7E\",\n      bordered: false,\n      style: {\n        width: 300,\n        marginLeft: -100,\n        background: '#FAFAFA',\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"p1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"p2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst WrappedDemo2 = _Form.create({\n  name: 'validate_other'\n})(Demo);\n\nexport default WrappedDemo2;","map":{"version":3,"sources":["/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/tagImage.js"],"names":["React","axios","reqwest","responseData","img","imgUrl","Option","Meta","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","load","document","getElementById","innerHTML","messageDetail","image_detial","root","keyword","alert","file_url","src","Demo","Component","state","loading","handleChange","fileList","setState","handleClick","render","uploadButton","imageUrl","props","name","showUploadList","customRequest","info","formData","FormData","append","url","method","processData","data","success","res","JSON","parse","console","log","onRemove","index","indexOf","newFileList","slice","splice","listType","className","beforeUpload","isJpgOrPng","type","isLt2M","size","marginLeft","width","background","textAlign","WrappedDemo2","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport reqwest from 'reqwest';\n\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Icon,\n    Rate,\n    Checkbox,\n    Row,\n    Col,\n    Card,\n    Modal,\n    message,\n} from 'antd';\n\n//定义后台返回数据类型\nlet responseData={\n\n\n};\n\nlet img={\n    imgUrl:''\n};\n\nconst { Option } = Select;\nconst { Meta } = Card;\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nfunction load() {\n    document.getElementById(\"p1\").innerHTML = responseData.messageDetail.image_detial.root;\n    document.getElementById(\"p2\").innerHTML = responseData.messageDetail.image_detial.keyword;\n    alert(responseData.messageDetail.file_url);\n    document.getElementById(\"img1\").src = responseData.messageDetail.file_url;\n}\n\nclass Demo extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    handleClick() {\n        img.imgUrl='';\n        alert(img.imgUrl);\n    };\n\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    render() {\n\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'}/>\n                <div className=\"ant-upload-text\">上传</div>\n            </div>\n        );\n        const { imageUrl } = this.state;\n\n        const props = {\n            name: \"avatar\",\n            showUploadList: false,//设置只上传一张图片，根据实际情况修改\n            customRequest: info => {//手动上传\n                const formData = new FormData();\n                formData.append('filename', info.file);//名字和后端接口名字对应\n                formData.append('recognize_type', \"1\");\n                reqwest({\n                    url: 'http://192.168.1.100:8000/image_recognize/',//上传url\n                    method: 'post',\n                    processData: false,\n                    data: formData,\n                    success: (res) => {//上传成功回调\n                        message.success(\"success\");\n                        var data = JSON.parse(res);\n                        console.log(data);\n                        responseData = data;\n                        console.log(\"------\");\n                        console.log(responseData);\n                        console.log(responseData.keyword);\n                        load();\n                    },\n                    error: () => {//上传失败回调\n                        message.error('上传失败！');\n                    },\n                });\n            },\n            onRemove: file => {//删除图片调用\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            listType: \"picture-card\",\n            className: \"avatar-uploader\",\n\n            beforeUpload: file => {//控制上传图片格式\n                const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n                if (!isJpgOrPng) {\n                    message.error('您只能上传JPG/PNG 文件!');\n                    return;\n                }\n                const isLt2M = file.size / 1024 / 1024 < 2;\n                if (!isLt2M) {\n                    message.error('图片大小必须小于2MB!');\n                    return;\n                }\n                return isJpgOrPng && isLt2M;\n            },\n        };\n        return (\n            <div style={{marginLeft:600}}>\n                <Upload\n                    {...props}\n                    listType=\"picture-card\"\n                    onChange={this.handleChange}\n                >\n                    {img.imgUrl ? <img id=\"img1\" src={imageUrl} alt=\"avatar\" style={{ width: '100%'}} /> :     uploadButton}\n                </Upload>\n                {/*<Button type=\"primary\"*/}\n                {/*    onClick={this.handleClick}*/}\n                {/*>*/}\n                {/*    我要上传！*/}\n                {/*</Button>*/}\n                <Card title=\"这张图片的标签\" bordered={false} style={{ width: 300 ,marginLeft:-100,background: '#FAFAFA',textAlign:\"center\"}}>\n                    <p id=\"p1\"></p>\n                    <p id=\"p2\"></p>\n                </Card>\n            </div>\n        )\n    }\n\n\n}\n\nconst WrappedDemo2 = Form.create({ name: 'validate_other' })(Demo);\nexport default WrappedDemo2;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/tagImage.js\";\nimport React from \"react\";\nimport axios from 'axios'; //import apis from '@/services/api';\n\nimport reqwest from 'reqwest';\n//定义后台返回数据类型\nlet responseData = {\n  tag: '11'\n};\nconst Option = _Select.Option;\nconst Meta = _Card.Meta;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [],\n      key: '',\n      url: '',\n      imageUrl: ''\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n\n        let data = new FormData();\n        data.append(\"upload\", values.upload);\n        let url = \"\";\n        axios.post(url, data, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(function (response) {\n          //得到后台返回的分数值\n          responseData = response.data;\n          console.log(responseData.tag);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    };\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n\n    this.normFile = e => {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          previewVisible = _this$state.previewVisible,\n          previewImage = _this$state.previewImage,\n          fileList = _this$state.fileList;\n    const _this$state2 = this.state,\n          imageUrl = _this$state2.imageUrl,\n          url = _this$state2.url,\n          key = _this$state2.key;\n    const that = this;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Upload\"));\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 14\n      }\n    };\n    const props = {\n      name: \"avatar\",\n      showUploadList: false,\n      //设置只上传一张图片，根据实际情况修改\n      customRequest: info => {\n        //手动上传\n        const formData = new FormData();\n        formData.append('avatar', info.file); //名字和后端接口名字对应\n\n        reqwest({\n          url: 'http://www.icube.fun:8000/image_recognize/',\n          //上传url\n          method: 'post',\n          processData: false,\n          data: formData,\n          success: res => {\n            //上传成功回调\n            alert(res);\n\n            if (res.code === '0') {\n              this.setState({\n                imageUrl: res.imageUrl\n              });\n\n              _message.success('上传成功！');\n            }\n          },\n          error: () => {\n            //上传失败回调\n            _message.error('上传失败！');\n          }\n        });\n      },\n      onRemove: file => {\n        //删除图片调用\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      beforeUpload: file => {\n        //控制上传图片格式\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n        if (!isJpgOrPng) {\n          _message.error('您只能上传JPG/PNG 文件!');\n\n          return;\n        }\n\n        const isLt2M = file.size / 1024 / 1024 < 2;\n\n        if (!isLt2M) {\n          _message.error('图片大小必须小于2MB!');\n\n          return;\n        }\n\n        return isJpgOrPng && isLt2M;\n      }\n    };\n    return React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      label: \"\\u9009\\u62E9\\u56FE\\u7247\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, getFieldDecorator('upload', {\n      valuePropName: 'fileList',\n      getValueFromEvent: this.normFile\n    })(React.createElement(_Upload, Object.assign({}, props, {\n      // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n      //action=\"http://www.icube.fun:8000/image_recognize/\"\n      //action=\"http://localhost:8080/oss/fileObj\"\n      listType: \"picture-card\",\n      fileList: fileList,\n      customRequest: this.customRequest,\n      onPreview: this.handlePreview,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), fileList.length >= 1 ? null : uploadButton)), React.createElement(_Modal, {\n      visible: previewVisible,\n      footer: null,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"example\",\n      style: {\n        width: '100%'\n      },\n      src: previewImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      wrapperCol: {\n        span: 12,\n        offset: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"\\u5F00\\u59CB\\uFF01\")), React.createElement(\"div\", {\n      style: {\n        background: '#ECECEC',\n        padding: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"\\u8FD9\\u5F20\\u56FE\\u7247\\u7684\\u6807\\u7B7E\\u4E3A\",\n      bordered: false,\n      style: {\n        width: 300,\n        marginLeft: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, responseData.tag))));\n  }\n\n}\n\nconst WrappedDemo2 = _Form.create({\n  name: 'validate_other'\n})(Demo);\n\nexport default WrappedDemo2;","map":{"version":3,"sources":["/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/tagImage.js"],"names":["React","axios","reqwest","responseData","tag","Option","Meta","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Demo","Component","state","previewVisible","previewImage","fileList","key","url","imageUrl","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","data","FormData","append","upload","post","headers","then","response","catch","handlePreview","preview","originFileObj","setState","handleCancel","handleChange","normFile","Array","isArray","render","that","getFieldDecorator","uploadButton","formItemLayout","labelCol","span","wrapperCol","name","showUploadList","customRequest","info","formData","method","processData","success","res","alert","code","onRemove","index","indexOf","newFileList","slice","splice","listType","className","beforeUpload","isJpgOrPng","type","isLt2M","size","valuePropName","getValueFromEvent","length","width","offset","background","padding","marginLeft","WrappedDemo2","create"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AAqBA;AACA,IAAIC,YAAY,GAAC;AACbC,EAAAA,GAAG,EAAC;AADS,CAAjB;MAIQC,M,WAAAA,M;MACAC,I,SAAAA,I;;AAER,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBN,IAArB;;AACAI,IAAAA,MAAM,CAACG,MAAP,GAAgB,MAAML,OAAO,CAACE,MAAM,CAACI,MAAR,CAA7B;;AACAJ,IAAAA,MAAM,CAACK,OAAP,GAAiBC,KAAK,IAAIP,MAAM,CAACO,KAAD,CAAhC;AACH,GALM,CAAP;AAMH;;AAED,MAAMC,IAAN,SAAmBnB,KAAK,CAACoB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,cAAc,EAAE,KADZ;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAMJC,MAAAA,GAAG,EAAE,EAND;AAOJC,MAAAA,GAAG,EAAE,EAPD;AAQJC,MAAAA,QAAQ,EAAE;AARN,KADuB;;AAAA,SAc/BC,YAd+B,GAchBC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACNE,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACH;;AACD,YAAIG,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAqBL,MAAM,CAACM,MAA5B;AACA,YAAIf,GAAG,GAAG,EAAV;AACAzB,QAAAA,KAAK,CAACyC,IAAN,CAAWhB,GAAX,EAAgBY,IAAhB,EAAqB;AACjBK,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADQ,SAArB,EAKKC,IALL,CAKU,UAAUC,QAAV,EAAoB;AACtB;AACA1C,UAAAA,YAAY,GAAC0C,QAAQ,CAACP,IAAtB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYlC,YAAY,CAACC,GAAzB;AACH,SATL,EAUK0C,KAVL,CAUW,UAAU5B,KAAV,EAAiB;AACpBkB,UAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACH,SAZL;AAaH,OApBD;AAqBH,KArC8B;;AAAA,SAwC/B6B,aAxC+B,GAwCf,MAAMvC,IAAN,IAAc;AAC1B,UAAI,CAACA,IAAI,CAACkB,GAAN,IAAa,CAAClB,IAAI,CAACwC,OAAvB,EAAgC;AAC5BxC,QAAAA,IAAI,CAACwC,OAAL,GAAe,MAAMzC,SAAS,CAACC,IAAI,CAACyC,aAAN,CAA9B;AACH;;AAED,WAAKC,QAAL,CAAc;AACV3B,QAAAA,YAAY,EAAEf,IAAI,CAACkB,GAAL,IAAYlB,IAAI,CAACwC,OADrB;AAEV1B,QAAAA,cAAc,EAAE;AAFN,OAAd;AAIH,KAjD8B;;AAAA,SAoD/B6B,YApD+B,GAoDhB,MAAM,KAAKD,QAAL,CAAc;AAAE5B,MAAAA,cAAc,EAAE;AAAlB,KAAd,CApDU;;AAAA,SAsD/B8B,YAtD+B,GAsDhB,CAAC;AAAE5B,MAAAA;AAAF,KAAD,KAAkB,KAAK0B,QAAL,CAAc;AAAE1B,MAAAA;AAAF,KAAd,CAtDF;;AAAA,SAwD/B6B,QAxD+B,GAwDpBxB,CAAC,IAAI;AACZO,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,CAA7B;;AACA,UAAIyB,KAAK,CAACC,OAAN,CAAc1B,CAAd,CAAJ,EAAsB;AAClB,eAAOA,CAAP;AACH;;AACD,aAAOA,CAAC,IAAIA,CAAC,CAACL,QAAd;AACH,KA9D8B;AAAA;;AAkE/BgC,EAAAA,MAAM,GAAG;AAAA,wBAC8C,KAAKnC,KADnD;AAAA,UACGC,cADH,eACGA,cADH;AAAA,UACmBC,YADnB,eACmBA,YADnB;AAAA,UACiCC,QADjC,eACiCA,QADjC;AAAA,yBAE0B,KAAKH,KAF/B;AAAA,UAEGM,QAFH,gBAEGA,QAFH;AAAA,UAEaD,GAFb,gBAEaA,GAFb;AAAA,UAEkBD,GAFlB,gBAEkBA,GAFlB;AAGL,UAAMgC,IAAI,GAAG,IAAb;AAHK,UAIGC,iBAJH,GAIyB,KAAK3B,KAAL,CAAWC,IAJpC,CAIG0B,iBAJH;AAKL,UAAMC,YAAY,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADS;AAEnBC,MAAAA,UAAU,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFO,KAAvB;AAKA,UAAM/B,KAAK,GAAG;AACViC,MAAAA,IAAI,EAAE,QADI;AAEVC,MAAAA,cAAc,EAAE,KAFN;AAEY;AACtBC,MAAAA,aAAa,EAAEC,IAAI,IAAI;AAAC;AACpB,cAAMC,QAAQ,GAAG,IAAI7B,QAAJ,EAAjB;AACA6B,QAAAA,QAAQ,CAAC5B,MAAT,CAAgB,QAAhB,EAA0B2B,IAAI,CAAC3D,IAA/B,EAFmB,CAEkB;;AACrCN,QAAAA,OAAO,CAAC;AACJwB,UAAAA,GAAG,EAAE,4CADD;AAC8C;AAClD2C,UAAAA,MAAM,EAAE,MAFJ;AAGJC,UAAAA,WAAW,EAAE,KAHT;AAIJhC,UAAAA,IAAI,EAAE8B,QAJF;AAKJG,UAAAA,OAAO,EAAGC,GAAD,IAAS;AAAC;AACfC,YAAAA,KAAK,CAACD,GAAD,CAAL;;AACA,gBAAIA,GAAG,CAACE,IAAJ,KAAa,GAAjB,EAAsB;AAClB,mBAAKxB,QAAL,CAAc;AACVvB,gBAAAA,QAAQ,EAAE6C,GAAG,CAAC7C;AADJ,eAAd;;AAGA,uBAAQ4C,OAAR,CAAgB,OAAhB;AACH;AACJ,WAbG;AAcJrD,UAAAA,KAAK,EAAE,MAAM;AAAC;AACV,qBAAQA,KAAR,CAAc,OAAd;AACH;AAhBG,SAAD,CAAP;AAkBH,OAxBS;AAyBVyD,MAAAA,QAAQ,EAAEnE,IAAI,IAAI;AAAC;AACf,aAAK0C,QAAL,CAAc7B,KAAK,IAAI;AACnB,gBAAMuD,KAAK,GAAGvD,KAAK,CAACG,QAAN,CAAeqD,OAAf,CAAuBrE,IAAvB,CAAd;AACA,gBAAMsE,WAAW,GAAGzD,KAAK,CAACG,QAAN,CAAeuD,KAAf,EAApB;AACAD,UAAAA,WAAW,CAACE,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACA,iBAAO;AACHpD,YAAAA,QAAQ,EAAEsD;AADP,WAAP;AAGH,SAPD;AAQH,OAlCS;AAmCVG,MAAAA,QAAQ,EAAE,cAnCA;AAoCVC,MAAAA,SAAS,EAAE,iBApCD;AAsCVC,MAAAA,YAAY,EAAE3E,IAAI,IAAI;AAAC;AACnB,cAAM4E,UAAU,GAAG5E,IAAI,CAAC6E,IAAL,KAAc,YAAd,IAA8B7E,IAAI,CAAC6E,IAAL,KAAc,WAA/D;;AAEA,YAAI,CAACD,UAAL,EAAiB;AACb,mBAAQlE,KAAR,CAAc,kBAAd;;AACA;AACH;;AACD,cAAMoE,MAAM,GAAG9E,IAAI,CAAC+E,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,YAAI,CAACD,MAAL,EAAa;AACT,mBAAQpE,KAAR,CAAc,cAAd;;AACA;AACH;;AACD,eAAOkE,UAAU,IAAIE,MAArB;AACH;AAnDS,KAAd;AAsDA,WACI,6CAAU1B,cAAV;AAA0B,MAAA,QAAQ,EAAE,KAAKhC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ8B,iBAAiB,CAAC,QAAD,EAAU;AACvB8B,MAAAA,aAAa,EAAE,UADQ;AAEvBC,MAAAA,iBAAiB,EAAE,KAAKpC;AAFD,KAAV,CAAjB,CAII,+CACQtB,KADR;AAEI;AACA;AACA;AACA,MAAA,QAAQ,EAAC,cALb;AAMI,MAAA,QAAQ,EAAEP,QANd;AAOI,MAAA,aAAa,EAAE,KAAK0C,aAPxB;AAQI,MAAA,SAAS,EAAE,KAAKnB,aARpB;AASI,MAAA,QAAQ,EAAE,KAAKK,YATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWK5B,QAAQ,CAACkE,MAAT,IAAmB,CAAnB,GAAuB,IAAvB,GAA8B/B,YAXnC,CAJJ,CAFR,EAqBI;AAAO,MAAA,OAAO,EAAErC,cAAhB;AAAgC,MAAA,MAAM,EAAE,IAAxC;AAA8C,MAAA,QAAQ,EAAE,KAAK6B,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAC,SAAT;AAAmB,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE;AAAT,OAA1B;AAA6C,MAAA,GAAG,EAAEpE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArBJ,CADJ,EA2BI,0BAAM,IAAN;AAAW,MAAA,UAAU,EAAE;AAAEuC,QAAAA,IAAI,EAAE,EAAR;AAAY8B,QAAAA,MAAM,EAAE;AAApB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CA3BJ,EAgCI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,SAAd;AAAyBC,QAAAA,OAAO,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAC,kDAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAjC;AAAwC,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE,GAAT;AAAcI,QAAAA,UAAU,EAAC;AAAzB,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI5F,YAAY,CAACC,GAAjB,CADJ,CADJ,CAhCJ,CADJ;AAwCH;;AAhL8B;;AAmLnC,MAAM4F,YAAY,GAAG,MAAKC,MAAL,CAAY;AAAEjC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAwC7C,IAAxC,CAArB;;AACA,eAAe6E,YAAf","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\n//import apis from '@/services/api';\nimport reqwest from 'reqwest';\n\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Icon,\n    Rate,\n    Checkbox,\n    Row,\n    Col,\n    Card,\n    Modal,\n    message,\n} from 'antd';\n\n//定义后台返回数据类型\nlet responseData={\n    tag:'11'\n};\n\nconst { Option } = Select;\nconst { Meta } = Card;\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nclass Demo extends React.Component {\n    state = {\n        previewVisible: false,\n        previewImage: '',\n        fileList: [\n\n        ],\n        key: '',\n        url: '',\n        imageUrl: '',\n    };\n\n    //提交事件\n    //图片单独提交，submit只是为了请求后台数据\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n            let data = new FormData();\n            data.append(\"upload\",values.upload);\n            let url = \"\";\n            axios.post(url, data,{\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n                .then(function (response) {\n                    //得到后台返回的分数值\n                    responseData=response.data;\n                    console.log(responseData.tag);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        });\n    };\n\n    //图片预览\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n\n    //关闭预览框\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    normFile = e => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n\n\n    render() {\n        const { previewVisible, previewImage, fileList } = this.state;\n        const { imageUrl, url, key } = this.state;\n        const that = this;\n        const { getFieldDecorator } = this.props.form;\n        const uploadButton = (\n            <div>\n                <Icon type=\"plus\" />\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n\n        const props = {\n            name: \"avatar\",\n            showUploadList: false,//设置只上传一张图片，根据实际情况修改\n            customRequest: info => {//手动上传\n                const formData = new FormData();\n                formData.append('avatar', info.file);//名字和后端接口名字对应\n                reqwest({\n                    url: 'http://www.icube.fun:8000/image_recognize/',//上传url\n                    method: 'post',\n                    processData: false,\n                    data: formData,\n                    success: (res) => {//上传成功回调\n                        alert(res);\n                        if (res.code === '0') {\n                            this.setState({\n                                imageUrl: res.imageUrl\n                            });\n                            message.success('上传成功！');\n                        }\n                    },\n                    error: () => {//上传失败回调\n                        message.error('上传失败！');\n                    },\n                });\n            },\n            onRemove: file => {//删除图片调用\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            listType: \"picture-card\",\n            className: \"avatar-uploader\",\n\n            beforeUpload: file => {//控制上传图片格式\n                const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n                if (!isJpgOrPng) {\n                    message.error('您只能上传JPG/PNG 文件!');\n                    return;\n                }\n                const isLt2M = file.size / 1024 / 1024 < 2;\n                if (!isLt2M) {\n                    message.error('图片大小必须小于2MB!');\n                    return;\n                }\n                return isJpgOrPng && isLt2M;\n            },\n        };\n\n        return (\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                <Form.Item label=\"选择图片\">\n                    {\n                        getFieldDecorator('upload',{\n                            valuePropName: 'fileList',\n                            getValueFromEvent: this.normFile,\n                        })(\n                            <Upload\n                                {...props}\n                                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                                //action=\"http://www.icube.fun:8000/image_recognize/\"\n                                //action=\"http://localhost:8080/oss/fileObj\"\n                                listType=\"picture-card\"\n                                fileList={fileList}\n                                customRequest={this.customRequest}\n                                onPreview={this.handlePreview}\n                                onChange={this.handleChange}\n                            >\n                                {fileList.length >= 1 ? null : uploadButton}\n                            </Upload>\n                        )\n                    }\n                    <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                    </Modal>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        开始！\n                    </Button>\n                </Form.Item>\n                <div style={{ background: '#ECECEC', padding: '30px' }}>\n                    <Card title=\"这张图片的标签为\" bordered={false} style={{ width: 300 ,marginLeft:500}}>\n                        <p>{responseData.tag}</p>\n                    </Card>\n                </div>\n            </Form>\n        );\n    }\n}\n\nconst WrappedDemo2 = Form.create({ name: 'validate_other' })(Demo);\nexport default WrappedDemo2;"]},"metadata":{},"sourceType":"module"}
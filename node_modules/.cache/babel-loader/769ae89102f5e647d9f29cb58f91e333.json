{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nvar _jsxFileName = \"/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/uploadImage.js\";\nimport React from \"react\"; //\n// import {\n//     Form,\n//     Select,\n//     InputNumber,\n//     Switch,\n//     Radio,\n//     Slider,\n//     Button,\n//     Upload,\n//     Icon,\n//     Rate,\n//     Checkbox,\n//     Row,\n//     Col,\n//     Card,\n// } from 'antd';\n//\n// const { Option } = Select;\n// const { Meta } = Card;\n//\n// class Demo extends React.Component {\n//     handleSubmit = e => {\n//         e.preventDefault();\n//         this.props.form.validateFields((err, values) => {\n//             if (!err) {\n//                 console.log('Received values of form: ', values);\n//             }\n//         });\n//     };\n//\n//     normFile = e => {\n//         console.log('Upload event:', e);\n//         if (Array.isArray(e)) {\n//             return e;\n//         }\n//         return e && e.fileList;\n//     };\n//\n//     render() {\n//         const { getFieldDecorator } = this.props.form;\n//         const formItemLayout = {\n//             labelCol: { span: 6 },\n//             wrapperCol: { span: 14 },\n//         };\n//         return (\n//             <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n//                 <Form.Item label=\"上传图片\">\n//                     {getFieldDecorator('dragger', {\n//                         valuePropName: 'fileList',\n//                         getValueFromEvent: this.normFile,\n//                     })(\n//                         <Upload.Dragger name=\"files\" action=\"/upload.do\">\n//                             <p className=\"ant-upload-drag-icon\">\n//                                 <Icon type=\"inbox\" />\n//                             </p>\n//                             <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n//                         </Upload.Dragger>,\n//                     )}\n//                 </Form.Item>\n//\n//                 <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n//                     <Button type=\"primary\" htmlType=\"submit\">\n//                         Submit\n//                     </Button>\n//                 </Form.Item>\n//                 <div style={{ background: '#ECECEC', padding: '30px' }}>\n//                     <Card title=\"颜值得分\" bordered={false} style={{ width: 300 }}>\n//                         <p>Card content</p>\n//                     </Card>\n//                 </div>\n//\n//             </Form>\n//         );\n//     }\n// }\n\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass PicturesWall extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [{\n        uid: '-1',\n        name: 'image.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '-2',\n        name: 'image.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '-3',\n        name: 'image.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '-4',\n        name: 'image.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '-5',\n        name: 'image.png',\n        status: 'error'\n      }]\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          previewVisible = _this$state.previewVisible,\n          previewImage = _this$state.previewImage,\n          fileList = _this$state.fileList;\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Upload\"));\n    return React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(_Upload, {\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      listType: \"picture-card\",\n      fileList: fileList,\n      onPreview: this.handlePreview,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, fileList.length >= 8 ? null : uploadButton), React.createElement(_Modal, {\n      visible: previewVisible,\n      footer: null,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"example\",\n      style: {\n        width: '100%'\n      },\n      src: previewImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(PicturesWall, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}), document.getElementById('container')); //const WrappedDemo = Upload.create({ name: 'validate_other' })(Demo);\n\nexport default PicturesWall;","map":{"version":3,"sources":["/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/uploadImage.js"],"names":["React","ReactDOM","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","PicturesWall","Component","state","previewVisible","previewImage","fileList","uid","name","status","url","handleCancel","setState","handlePreview","preview","originFileObj","handleChange","render","uploadButton","length","width","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\n//\n// import {\n//     Form,\n//     Select,\n//     InputNumber,\n//     Switch,\n//     Radio,\n//     Slider,\n//     Button,\n//     Upload,\n//     Icon,\n//     Rate,\n//     Checkbox,\n//     Row,\n//     Col,\n//     Card,\n// } from 'antd';\n//\n// const { Option } = Select;\n// const { Meta } = Card;\n//\n// class Demo extends React.Component {\n//     handleSubmit = e => {\n//         e.preventDefault();\n//         this.props.form.validateFields((err, values) => {\n//             if (!err) {\n//                 console.log('Received values of form: ', values);\n//             }\n//         });\n//     };\n//\n//     normFile = e => {\n//         console.log('Upload event:', e);\n//         if (Array.isArray(e)) {\n//             return e;\n//         }\n//         return e && e.fileList;\n//     };\n//\n//     render() {\n//         const { getFieldDecorator } = this.props.form;\n//         const formItemLayout = {\n//             labelCol: { span: 6 },\n//             wrapperCol: { span: 14 },\n//         };\n//         return (\n//             <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n//                 <Form.Item label=\"上传图片\">\n//                     {getFieldDecorator('dragger', {\n//                         valuePropName: 'fileList',\n//                         getValueFromEvent: this.normFile,\n//                     })(\n//                         <Upload.Dragger name=\"files\" action=\"/upload.do\">\n//                             <p className=\"ant-upload-drag-icon\">\n//                                 <Icon type=\"inbox\" />\n//                             </p>\n//                             <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n//                         </Upload.Dragger>,\n//                     )}\n//                 </Form.Item>\n//\n//                 <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n//                     <Button type=\"primary\" htmlType=\"submit\">\n//                         Submit\n//                     </Button>\n//                 </Form.Item>\n//                 <div style={{ background: '#ECECEC', padding: '30px' }}>\n//                     <Card title=\"颜值得分\" bordered={false} style={{ width: 300 }}>\n//                         <p>Card content</p>\n//                     </Card>\n//                 </div>\n//\n//             </Form>\n//         );\n//     }\n// }\n\n\n\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nimport { Upload, Icon, Modal } from 'antd';\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nclass PicturesWall extends React.Component {\n    state = {\n        previewVisible: false,\n        previewImage: '',\n        fileList: [\n            {\n                uid: '-1',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            },\n            {\n                uid: '-2',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            },\n            {\n                uid: '-3',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            },\n            {\n                uid: '-4',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            },\n            {\n                uid: '-5',\n                name: 'image.png',\n                status: 'error',\n            },\n        ],\n    };\n\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    render() {\n        const { previewVisible, previewImage, fileList } = this.state;\n        const uploadButton = (\n            <div>\n                <Icon type=\"plus\" />\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n        return (\n            <div className=\"clearfix\">\n                <Upload\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    listType=\"picture-card\"\n                    fileList={fileList}\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                >\n                    {fileList.length >= 8 ? null : uploadButton}\n                </Upload>\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<PicturesWall />, document.getElementById('container'));\n\n//const WrappedDemo = Upload.create({ name: 'validate_other' })(Demo);\nexport default PicturesWall;"]},"metadata":{},"sourceType":"module"}
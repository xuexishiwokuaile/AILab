{"ast":null,"code":"import _typeof from 'babel-runtime/helpers/typeof';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport TweenOne from './TweenOne';\nimport { dataToArray, toArrayChildren, getChildrenFromProps, mergeChildren, transformArguments, findChildInChildrenByKey } from './util';\n\nfunction noop() {}\n\nvar TweenOneGroup = function (_Component) {\n  _inherits(TweenOneGroup, _Component);\n\n  function TweenOneGroup() {\n    _classCallCheck(this, TweenOneGroup);\n\n    var _this = _possibleConstructorReturn(this, (TweenOneGroup.__proto__ || Object.getPrototypeOf(TweenOneGroup)).apply(this, arguments));\n\n    _initialiseProps.call(_this);\n\n    _this.keysToEnter = [];\n    _this.keysToLeave = [];\n    _this.saveTweenTag = {};\n    _this.onEnterBool = false;\n    _this.isTween = {}; // 第一进入，appear 为 true 时默认用 enter 或 tween-one 上的效果\n\n    var children = toArrayChildren(getChildrenFromProps(_this.props));\n    _this.state = {\n      children: children\n    };\n    return _this;\n  }\n\n  _createClass(TweenOneGroup, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.onEnterBool = true;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var nextChildren = toArrayChildren(nextProps.children);\n      var currentChildren = toArrayChildren(this.state.children);\n      var newChildren = mergeChildren(currentChildren, nextChildren);\n      this.keysToEnter = [];\n      this.keysToLeave = [];\n      nextChildren.forEach(function (c) {\n        if (!c) {\n          return;\n        }\n\n        var key = c.key;\n        var hasPrev = findChildInChildrenByKey(currentChildren, key); // 如果当前 key 已存在 saveTweenTag 里，，刷新 child;\n\n        if (_this2.saveTweenTag[key]) {\n          _this2.saveTweenTag[key] = React.cloneElement(_this2.saveTweenTag[key], {}, c);\n        }\n\n        if (!hasPrev && key) {\n          _this2.keysToEnter.push(key);\n        }\n      });\n      currentChildren.forEach(function (c) {\n        if (!c) {\n          return;\n        }\n\n        var key = c.key;\n        var hasNext = findChildInChildrenByKey(nextChildren, key);\n\n        if (!hasNext && key) {\n          _this2.keysToLeave.push(key);\n\n          delete _this2.saveTweenTag[key];\n        }\n      });\n      this.setState({\n        children: newChildren\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var childrenToRender = this.getChildrenToRender(this.state.children);\n\n      if (!this.props.component) {\n        return childrenToRender[0] || null;\n      }\n\n      var componentProps = _extends({}, this.props);\n\n      ['component', 'componentProps', 'appear', 'enter', 'leave', 'animatingClassName', 'onEnd', 'resetStyleBool'].forEach(function (key) {\n        return delete componentProps[key];\n      });\n      return createElement(this.props.component, _extends({}, componentProps, this.props.componentProps), childrenToRender);\n    }\n  }]);\n\n  return TweenOneGroup;\n}(Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onChange = function (animation, key, type, obj) {\n    var length = dataToArray(animation).length;\n    var tag = obj.target;\n    var classIsSvg = _typeof(tag.className) === 'object' && 'baseVal' in tag.className;\n    var isEnter = type === 'enter' || type === 'appear';\n\n    if (obj.mode === 'onStart') {\n      if (classIsSvg) {\n        tag.className.baseVal = _this3.setClassName(tag.className.baseVal, isEnter);\n      } else {\n        tag.className = _this3.setClassName(tag.className, isEnter);\n      }\n    } else if (obj.index === length - 1 && obj.mode === 'onComplete') {\n      if (type === 'enter') {\n        _this3.keysToEnter.splice(_this3.keysToEnter.indexOf(key), 1);\n      } else if (type === 'leave') {\n        var children = _this3.state.children.filter(function (child) {\n          return key !== child.key;\n        });\n\n        _this3.keysToLeave.splice(_this3.keysToLeave.indexOf(key), 1);\n\n        delete _this3.saveTweenTag[key];\n\n        _this3.setState({\n          children: children\n        });\n      }\n\n      if (classIsSvg) {\n        tag.className.baseVal = tag.className.baseVal.replace(_this3.props.animatingClassName[isEnter ? 0 : 1], '').trim();\n      } else {\n        tag.className = tag.className.replace(_this3.props.animatingClassName[isEnter ? 0 : 1], '').trim();\n      }\n\n      delete _this3.isTween[key];\n      var _obj = {\n        key: key,\n        type: type\n      };\n\n      _this3.props.onEnd(_obj);\n    }\n  };\n\n  this.setClassName = function (name, isEnter) {\n    var className = name.replace(_this3.props.animatingClassName[isEnter ? 1 : 0], '').trim();\n\n    if (className.indexOf(_this3.props.animatingClassName[isEnter ? 0 : 1]) === -1) {\n      className = (className + ' ' + _this3.props.animatingClassName[isEnter ? 0 : 1]).trim();\n    }\n\n    return className;\n  };\n\n  this.getTweenChild = function (child) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var key = child.key;\n    _this3.saveTweenTag[key] = React.createElement(TweenOne, _extends({}, props, {\n      key: key,\n      component: null\n    }), child);\n    return _this3.saveTweenTag[key];\n  };\n\n  this.getCoverAnimation = function (child, i, type) {\n    var animation = void 0;\n    var onChange = void 0;\n    animation = type === 'leave' ? _this3.props.leave : _this3.props.enter;\n\n    if (type === 'appear') {\n      var appear = transformArguments(_this3.props.appear, child.key, i);\n      animation = appear && _this3.props.enter || null;\n    }\n\n    onChange = _this3.onChange.bind(_this3, animation, child.key, type);\n    var animate = transformArguments(animation, child.key, i);\n    var props = {\n      key: child.key,\n      animation: animate,\n      onChange: onChange,\n      resetStyleBool: _this3.props.resetStyleBool\n    };\n\n    var children = _this3.getTweenChild(child, props);\n\n    if (_this3.keysToEnter.concat(_this3.keysToLeave).indexOf(child.key) >= 0 || !_this3.onEnterBool && animation) {\n      _this3.isTween[child.key] = type;\n    }\n\n    return children;\n  };\n\n  this.getChildrenToRender = function (children) {\n    return children.map(function (child, i) {\n      if (!child || !child.key) {\n        return child;\n      }\n\n      var key = child.key;\n\n      if (_this3.keysToLeave.indexOf(key) >= 0) {\n        return _this3.getCoverAnimation(child, i, 'leave');\n      } else if ((_this3.keysToEnter.indexOf(key) >= 0 || _this3.isTween[key] && _this3.keysToLeave.indexOf(key) === -1) && !(_this3.isTween[key] === 'enter' && _this3.saveTweenTag[key])) {\n        /**\n        * 1. 在 key 在 enter 里。\n        * 2. 出场未结束，触发进场, this.isTween[key] 为 leave, key 在 enter 里。\n        * 3. 状态为 enter 且 tweenTag 里有值时，不执行重载动画属性，直接调用 tweenTag 里的。\n        */\n        return _this3.getCoverAnimation(child, i, 'enter');\n      } else if (!_this3.onEnterBool) {\n        return _this3.getCoverAnimation(child, i, 'appear');\n      }\n\n      return _this3.saveTweenTag[key];\n    });\n  };\n};\n\nTweenOneGroup.propTypes = {\n  component: PropTypes.any,\n  componentProps: PropTypes.object,\n  children: PropTypes.any,\n  style: PropTypes.object,\n  appear: PropTypes.bool,\n  enter: PropTypes.any,\n  leave: PropTypes.any,\n  animatingClassName: PropTypes.array,\n  onEnd: PropTypes.func,\n  resetStyleBool: PropTypes.bool\n};\nTweenOneGroup.defaultProps = {\n  component: 'div',\n  componentProps: {},\n  appear: true,\n  animatingClassName: ['tween-one-entering', 'tween-one-leaving'],\n  enter: {\n    x: 50,\n    opacity: 0,\n    type: 'from'\n  },\n  leave: {\n    x: -50,\n    opacity: 0\n  },\n  onEnd: noop,\n  resetStyleBool: true\n};\nTweenOneGroup.isTweenOneGroup = true;\nexport default TweenOneGroup;","map":null,"metadata":{},"sourceType":"module"}
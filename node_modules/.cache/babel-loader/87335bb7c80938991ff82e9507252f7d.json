{"ast":null,"code":"import \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/rate/style\";\nimport _Rate from \"antd/es/rate\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/slider/style\";\nimport _Slider from \"antd/es/slider\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/uploadImage.js\";\nimport React from \"react\";\nconst Option = _Select.Option;\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.normFile = e => {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 14\n      }\n    };\n    return React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      label: \"Plain Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ant-form-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"China\")), React.createElement(_Form.Item, {\n      label: \"Select\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, getFieldDecorator('select', {\n      rules: [{\n        required: true,\n        message: 'Please select your country!'\n      }]\n    })(React.createElement(_Select, {\n      placeholder: \"Please select a country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"china\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"China\"), React.createElement(Option, {\n      value: \"usa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"U.S.A\")))), React.createElement(_Form.Item, {\n      label: \"Select[multiple]\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, getFieldDecorator('select-multiple', {\n      rules: [{\n        required: true,\n        message: 'Please select your favourite colors!',\n        type: 'array'\n      }]\n    })(React.createElement(_Select, {\n      mode: \"multiple\",\n      placeholder: \"Please select favourite colors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Red\"), React.createElement(Option, {\n      value: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Green\"), React.createElement(Option, {\n      value: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Blue\")))), React.createElement(_Form.Item, {\n      label: \"InputNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, getFieldDecorator('input-number', {\n      initialValue: 3\n    })(React.createElement(_InputNumber, {\n      min: 1,\n      max: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ant-form-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" machines\")), React.createElement(_Form.Item, {\n      label: \"Switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, getFieldDecorator('switch', {\n      valuePropName: 'checked'\n    })(React.createElement(_Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"Slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, getFieldDecorator('slider')(React.createElement(_Slider, {\n      marks: {\n        0: 'A',\n        20: 'B',\n        40: 'C',\n        60: 'D',\n        80: 'E',\n        100: 'F'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"Radio.Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, getFieldDecorator('radio-group')(React.createElement(_Radio.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(_Radio, {\n      value: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"item 1\"), React.createElement(_Radio, {\n      value: \"b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"item 2\"), React.createElement(_Radio, {\n      value: \"c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"item 3\")))), React.createElement(_Form.Item, {\n      label: \"Radio.Button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, getFieldDecorator('radio-button')(React.createElement(_Radio.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(_Radio.Button, {\n      value: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"item 1\"), React.createElement(_Radio.Button, {\n      value: \"b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"item 2\"), React.createElement(_Radio.Button, {\n      value: \"c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"item 3\")))), React.createElement(_Form.Item, {\n      label: \"Checkbox.Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, getFieldDecorator('checkbox-group', {\n      initialValue: ['A', 'B']\n    })(React.createElement(_Checkbox.Group, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      value: \"A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"A\")), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      disabled: true,\n      value: \"B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"B\")), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      value: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"C\")), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      value: \"D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"D\")), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      value: \"E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"E\")))))), React.createElement(_Form.Item, {\n      label: \"Rate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, getFieldDecorator('rate', {\n      initialValue: 3.5\n    })(React.createElement(_Rate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"Upload\",\n      extra: \"longgggggggggggggggggggggggggggggggggg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, getFieldDecorator('upload', {\n      valuePropName: 'fileList',\n      getValueFromEvent: this.normFile\n    })(React.createElement(_Upload, {\n      name: \"logo\",\n      action: \"/upload.do\",\n      listType: \"picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), \" Click to upload\")))), React.createElement(_Form.Item, {\n      label: \"Dragger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, getFieldDecorator('dragger', {\n      valuePropName: 'fileList',\n      getValueFromEvent: this.normFile\n    })(React.createElement(_Upload.Dragger, {\n      name: \"files\",\n      action: \"/upload.do\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"inbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n      className: \"ant-upload-hint\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Support for a single or bulk upload.\")))), React.createElement(_Form.Item, {\n      wrapperCol: {\n        span: 12,\n        offset: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst WrappedDemo = _Form.create({\n  name: 'validate_other'\n})(Demo);\n\nexport default WrappedDemo;","map":{"version":3,"sources":["/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/uploadImage.js"],"names":["React","Option","Demo","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","normFile","Array","isArray","fileList","render","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","rules","required","message","type","initialValue","valuePropName","width","getValueFromEvent","offset","WrappedDemo","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Icon,\n    Rate,\n    Checkbox,\n    Row,\n    Col,\n} from 'antd';\n\nconst { Option } = Select;\n\nclass Demo extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    normFile = e => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                <Form.Item label=\"Plain Text\">\n                    <span className=\"ant-form-text\">China</span>\n                </Form.Item>\n                <Form.Item label=\"Select\" hasFeedback>\n                    {getFieldDecorator('select', {\n                        rules: [{ required: true, message: 'Please select your country!' }],\n                    })(\n                        <Select placeholder=\"Please select a country\">\n                            <Option value=\"china\">China</Option>\n                            <Option value=\"usa\">U.S.A</Option>\n                        </Select>,\n                    )}\n                </Form.Item>\n\n                <Form.Item label=\"Select[multiple]\">\n                    {getFieldDecorator('select-multiple', {\n                        rules: [\n                            { required: true, message: 'Please select your favourite colors!', type: 'array' },\n                        ],\n                    })(\n                        <Select mode=\"multiple\" placeholder=\"Please select favourite colors\">\n                            <Option value=\"red\">Red</Option>\n                            <Option value=\"green\">Green</Option>\n                            <Option value=\"blue\">Blue</Option>\n                        </Select>,\n                    )}\n                </Form.Item>\n\n                <Form.Item label=\"InputNumber\">\n                    {getFieldDecorator('input-number', { initialValue: 3 })(<InputNumber min={1} max={10} />)}\n                    <span className=\"ant-form-text\"> machines</span>\n                </Form.Item>\n\n                <Form.Item label=\"Switch\">\n                    {getFieldDecorator('switch', { valuePropName: 'checked' })(<Switch />)}\n                </Form.Item>\n\n                <Form.Item label=\"Slider\">\n                    {getFieldDecorator('slider')(\n                        <Slider\n                            marks={{\n                                0: 'A',\n                                20: 'B',\n                                40: 'C',\n                                60: 'D',\n                                80: 'E',\n                                100: 'F',\n                            }}\n                        />,\n                    )}\n                </Form.Item>\n\n                <Form.Item label=\"Radio.Group\">\n                    {getFieldDecorator('radio-group')(\n                        <Radio.Group>\n                            <Radio value=\"a\">item 1</Radio>\n                            <Radio value=\"b\">item 2</Radio>\n                            <Radio value=\"c\">item 3</Radio>\n                        </Radio.Group>,\n                    )}\n                </Form.Item>\n\n                <Form.Item label=\"Radio.Button\">\n                    {getFieldDecorator('radio-button')(\n                        <Radio.Group>\n                            <Radio.Button value=\"a\">item 1</Radio.Button>\n                            <Radio.Button value=\"b\">item 2</Radio.Button>\n                            <Radio.Button value=\"c\">item 3</Radio.Button>\n                        </Radio.Group>,\n                    )}\n                </Form.Item>\n\n                <Form.Item label=\"Checkbox.Group\">\n                    {getFieldDecorator('checkbox-group', {\n                        initialValue: ['A', 'B'],\n                    })(\n                        <Checkbox.Group style={{ width: '100%' }}>\n                            <Row>\n                                <Col span={8}>\n                                    <Checkbox value=\"A\">A</Checkbox>\n                                </Col>\n                                <Col span={8}>\n                                    <Checkbox disabled value=\"B\">\n                                        B\n                                    </Checkbox>\n                                </Col>\n                                <Col span={8}>\n                                    <Checkbox value=\"C\">C</Checkbox>\n                                </Col>\n                                <Col span={8}>\n                                    <Checkbox value=\"D\">D</Checkbox>\n                                </Col>\n                                <Col span={8}>\n                                    <Checkbox value=\"E\">E</Checkbox>\n                                </Col>\n                            </Row>\n                        </Checkbox.Group>,\n                    )}\n                </Form.Item>\n\n                <Form.Item label=\"Rate\">\n                    {getFieldDecorator('rate', {\n                        initialValue: 3.5,\n                    })(<Rate />)}\n                </Form.Item>\n\n                <Form.Item label=\"Upload\" extra=\"longgggggggggggggggggggggggggggggggggg\">\n                    {getFieldDecorator('upload', {\n                        valuePropName: 'fileList',\n                        getValueFromEvent: this.normFile,\n                    })(\n                        <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                            <Button>\n                                <Icon type=\"upload\" /> Click to upload\n                            </Button>\n                        </Upload>,\n                    )}\n                </Form.Item>\n\n                <Form.Item label=\"Dragger\">\n                    {getFieldDecorator('dragger', {\n                        valuePropName: 'fileList',\n                        getValueFromEvent: this.normFile,\n                    })(\n                        <Upload.Dragger name=\"files\" action=\"/upload.do\">\n                            <p className=\"ant-upload-drag-icon\">\n                                <Icon type=\"inbox\" />\n                            </p>\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                            <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n                        </Upload.Dragger>,\n                    )}\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nconst WrappedDemo = Form.create({ name: 'validate_other' })(Demo);\nexport default WrappedDemo;"]},"metadata":{},"sourceType":"module"}
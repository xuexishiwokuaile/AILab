{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/combineImage.js\";\nimport React from \"react\";\nlet responseData = {\n  url: 'https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png'\n};\nconst Option = _Select.Option;\nconst Meta = _Card.Meta;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n\n        let data = new FormData();\n        data.append(\"upload\", values.upload);\n        let url = \"\";\n        axios.post(url, data, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(function (response) {\n          //得到后台返回的分数值\n          responseData = response.data;\n          console.log(responseData.score);\n          var html = \"\";\n          html += \"<span>测试：\" + responseData.score + \"</span>\";\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    };\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n\n    this.normFile = e => {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 14\n      }\n    };\n    return React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      label: \"\\u4E0A\\u4F20\\u56FE\\u7247\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, getFieldDecorator('dragger', {\n      valuePropName: 'fileList',\n      getValueFromEvent: this.normFile\n    })(React.createElement(_Upload.Dragger, {\n      name: \"files\",\n      action: \"/upload.do\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"inbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Click or drag file to this area to upload\")))), React.createElement(_Form.Item, {\n      wrapperCol: {\n        span: 12,\n        offset: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(_Card, {\n      hoverable: true,\n      style: {\n        width: 240,\n        marginLeft: 550\n      },\n      cover: React.createElement(\"img\", {\n        alt: \"example\",\n        src: responseData.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      title: \"\\u5904\\u7406\\u7ED3\\u679C\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst WrappedDemo1 = _Form.create({\n  name: 'validate_other'\n})(Demo);\n\nexport default WrappedDemo1;","map":{"version":3,"sources":["/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/combineImage.js"],"names":["React","responseData","url","Option","Meta","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Demo","Component","state","previewVisible","previewImage","fileList","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","data","FormData","append","upload","axios","post","headers","then","response","score","html","catch","handlePreview","preview","originFileObj","setState","handleCancel","handleChange","normFile","Array","isArray","render","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","valuePropName","getValueFromEvent","offset","width","marginLeft","textAlign","WrappedDemo1","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Icon,\n    Rate,\n    Checkbox,\n    Row,\n    Col,\n    Card,\n} from 'antd';\n\nlet responseData={\n    url:'https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png'\n};\n\nconst { Option } = Select;\nconst { Meta } = Card;\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nclass Demo extends React.Component {\n    state = {\n        previewVisible: false,\n        previewImage: '',\n        fileList: [\n\n        ],\n    };\n    //提交事件\n    //图片单独提交，submit只是为了请求后台数据\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n            let data = new FormData();\n            data.append(\"upload\",values.upload);\n            let url = \"\";\n            axios.post(url, data,{\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n                .then(function (response) {\n                    //得到后台返回的分数值\n                    responseData=response.data;\n                    console.log(responseData.score);\n                    var html = \"\";\n                    html +=\"<span>测试：\"+responseData.score+\"</span>\";\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        });\n    };\n\n    //图片预览\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n\n    //关闭预览框\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    normFile = e => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                <Form.Item label=\"上传图片\">\n                    {getFieldDecorator('dragger', {\n                        valuePropName: 'fileList',\n                        getValueFromEvent: this.normFile,\n                    })(\n                        <Upload.Dragger name=\"files\" action=\"/upload.do\">\n                            <p className=\"ant-upload-drag-icon\">\n                                <Icon type=\"inbox\" />\n                            </p>\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        </Upload.Dragger>,\n                    )}\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n                <Card\n                    hoverable\n                    style={{ width: 240,marginLeft:550}}\n                    cover={<img alt=\"example\" src={responseData.url} />}\n                >\n                    <Meta title=\"处理结果\" style={{textAlign:\"center\"}}/>\n                </Card>\n\n            </Form>\n        );\n    }\n}\n\nconst WrappedDemo1 = Form.create({ name: 'validate_other' })(Demo);\nexport default WrappedDemo1;"]},"metadata":{},"sourceType":"module"}
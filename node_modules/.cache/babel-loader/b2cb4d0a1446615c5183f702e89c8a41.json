{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/tagImage.js\";\nimport React from \"react\";\nimport axios from 'axios'; //import apis from '@/services/api';\n\nimport reqwest from 'reqwest';\n//定义后台返回数据类型\nlet responseData = {\n  tag: ''\n};\nconst Option = _Select.Option;\nconst Meta = _Card.Meta;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n  }\n\n  render() {\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: this.state.loading ? 'loading' : 'plus',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\"));\n    const imageUrl = this.state.imageUrl;\n    const props = {\n      name: \"avatar\",\n      showUploadList: false,\n      //设置只上传一张图片，根据实际情况修改\n      customRequest: info => {\n        //手动上传\n        const formData = new FormData();\n        formData.append('filename', info.file); //名字和后端接口名字对应\n\n        formData.append('recognize_type', \"1\");\n        reqwest({\n          url: 'http://www.icube.fun:8000/image_recognize/',\n          //上传url\n          method: 'post',\n          processData: false,\n          data: formData,\n          success: res => {\n            //上传成功回调\n            _message.success(\"success\");\n\n            if (res.statusCode === '0') {\n              this.setState({\n                imageUrl: res.imageUrl\n              });\n              responseData.tag = res.messageDetail.result[0].message.success('上传成功！');\n            }\n          },\n          error: () => {\n            //上传失败回调\n            _message.error('上传失败！');\n          }\n        });\n      },\n      onRemove: file => {\n        //删除图片调用\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      beforeUpload: file => {\n        //控制上传图片格式\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n        if (!isJpgOrPng) {\n          _message.error('您只能上传JPG/PNG 文件!');\n\n          return;\n        }\n\n        const isLt2M = file.size / 1024 / 1024 < 2;\n\n        if (!isLt2M) {\n          _message.error('图片大小必须小于2MB!');\n\n          return;\n        }\n\n        return isJpgOrPng && isLt2M;\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(_Upload, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }) : uploadButton), React.createElement(_Card, {\n      title: \"\\u8FD9\\u5F20\\u56FE\\u7247\\u7684\\u6807\\u7B7E\\u6709\",\n      bordered: false,\n      style: {\n        width: 300,\n        marginLeft: 500,\n        background: '#ECECEC'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, responseData.root)));\n  }\n\n}\n\nconst WrappedDemo2 = _Form.create({\n  name: 'validate_other'\n})(Demo);\n\nexport default WrappedDemo2;","map":{"version":3,"sources":["/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/tagImage.js"],"names":["React","axios","reqwest","responseData","tag","Option","Meta","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Demo","Component","state","loading","render","uploadButton","imageUrl","props","name","showUploadList","customRequest","info","formData","FormData","append","url","method","processData","data","success","res","statusCode","setState","messageDetail","message","onRemove","index","fileList","indexOf","newFileList","slice","splice","listType","className","beforeUpload","isJpgOrPng","type","isLt2M","size","width","marginLeft","background","root","WrappedDemo2","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\n//import apis from '@/services/api';\nimport reqwest from 'reqwest';\n\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Icon,\n    Rate,\n    Checkbox,\n    Row,\n    Col,\n    Card,\n    Modal,\n    message,\n} from 'antd';\n\n//定义后台返回数据类型\nlet responseData={\n    tag:''\n};\n\nconst { Option } = Select;\nconst { Meta } = Card;\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nclass Demo extends React.Component {\n    // state = {\n    //     previewVisible: false,\n    //     previewImage: '',\n    //     fileList: [\n    //\n    //     ],\n    //     key: '',\n    //     url: '',\n    //     imageUrl: '',\n    // };\n    //\n    // //提交事件\n    // //图片单独提交，submit只是为了请求后台数据\n    // handleSubmit = e => {\n    //     e.preventDefault();\n    //     this.props.form.validateFields((err, values) => {\n    //         if (!err) {\n    //             console.log('Received values of form: ', values);\n    //         }\n    //         let data = new FormData();\n    //         data.append(\"upload\",values.upload);\n    //         let url = \"\";\n    //         axios.post(url, data,{\n    //             headers: {\n    //                 'Content-Type': 'multipart/form-data'\n    //             }\n    //         })\n    //             .then(function (response) {\n    //                 //得到后台返回的分数值\n    //                 responseData=response.data;\n    //                 console.log(responseData.tag);\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //             });\n    //     });\n    // };\n    //\n    // //图片预览\n    // handlePreview = async file => {\n    //     if (!file.url && !file.preview) {\n    //         file.preview = await getBase64(file.originFileObj);\n    //     }\n    //\n    //     this.setState({\n    //         previewImage: file.url || file.preview,\n    //         previewVisible: true,\n    //     });\n    // };\n    //\n    // //关闭预览框\n    // handleCancel = () => this.setState({ previewVisible: false });\n    //\n    // handleChange = ({ fileList }) => this.setState({ fileList });\n    //\n    // normFile = e => {\n    //     console.log('Upload event:', e);\n    //     if (Array.isArray(e)) {\n    //         return e;\n    //     }\n    //     return e && e.fileList;\n    // };\n    //\n    //\n    //\n    // render() {\n    //     const { previewVisible, previewImage, fileList } = this.state;\n    //     const { imageUrl, url, key } = this.state;\n    //     const that = this;\n    //     const { getFieldDecorator } = this.props.form;\n    //     const uploadButton = (\n    //         <div>\n    //             <Icon type=\"plus\" />\n    //             <div className=\"ant-upload-text\">Upload</div>\n    //         </div>\n    //     );\n    //     const formItemLayout = {\n    //         labelCol: { span: 6 },\n    //         wrapperCol: { span: 14 },\n    //     };\n    //\n    //     const props = {\n    //         name: \"avatar\",\n    //         showUploadList: false,//设置只上传一张图片，根据实际情况修改\n    //         customRequest: info => {//手动上传\n    //             const formData = new FormData();\n    //             formData.append('avatar', info.file);//名字和后端接口名字对应\n    //             reqwest({\n    //                 url: 'http://www.icube.fun:8000/image_recognize/',//上传url\n    //                 method: 'post',\n    //                 processData: false,\n    //                 data: formData,\n    //                 success: (res) => {//上传成功回调\n    //                     alert(res);\n    //                     if (res.code === '0') {\n    //                         this.setState({\n    //                             imageUrl: res.imageUrl\n    //                         });\n    //                         message.success('上传成功！');\n    //                     }\n    //                 },\n    //                 error: () => {//上传失败回调\n    //                     message.error('上传失败！');\n    //                 },\n    //             });\n    //         },\n    //         onRemove: file => {//删除图片调用\n    //             this.setState(state => {\n    //                 const index = state.fileList.indexOf(file);\n    //                 const newFileList = state.fileList.slice();\n    //                 newFileList.splice(index, 1);\n    //                 return {\n    //                     fileList: newFileList,\n    //                 };\n    //             });\n    //         },\n    //         listType: \"picture-card\",\n    //         className: \"avatar-uploader\",\n    //\n    //         beforeUpload: file => {//控制上传图片格式\n    //             const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    //\n    //             if (!isJpgOrPng) {\n    //                 message.error('您只能上传JPG/PNG 文件!');\n    //                 return;\n    //             }\n    //             const isLt2M = file.size / 1024 / 1024 < 2;\n    //             if (!isLt2M) {\n    //                 message.error('图片大小必须小于2MB!');\n    //                 return;\n    //             }\n    //             return isJpgOrPng && isLt2M;\n    //         },\n    //     };\n    //\n    //     return (\n    //         <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n    //             <Form.Item label=\"选择图片\">\n    //                 {\n    //                     getFieldDecorator('upload',{\n    //                         valuePropName: 'fileList',\n    //                         getValueFromEvent: this.normFile,\n    //                     })(\n    //                         <Upload\n    //                             {...props}\n    //                             // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n    //                             //action=\"http://www.icube.fun:8000/image_recognize/\"\n    //                             //action=\"http://localhost:8080/oss/fileObj\"\n    //                             listType=\"picture-card\"\n    //                             fileList={fileList}\n    //                             customRequest={this.customRequest}\n    //                             onPreview={this.handlePreview}\n    //                             onChange={this.handleChange}\n    //                         >\n    //                             {fileList.length >= 1 ? null : uploadButton}\n    //                         </Upload>\n    //                     )\n    //                 }\n    //                 <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n    //                     <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n    //                 </Modal>\n    //             </Form.Item>\n    //\n    //             <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n    //                 <Button type=\"primary\" htmlType=\"submit\">\n    //                     开始！\n    //                 </Button>\n    //             </Form.Item>\n    //             <div style={{ background: '#ECECEC', padding: '30px' }}>\n    //                 <Card title=\"这张图片的标签为\" bordered={false} style={{ width: 300 ,marginLeft:500}}>\n    //                     <p>{responseData.tag}</p>\n    //                 </Card>\n    //             </div>\n    //         </Form>\n    //     );\n    // }\n\n    state = {\n        loading: false,\n    };\n    render() {\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\n                <div className=\"ant-upload-text\">上传</div>\n            </div>\n        );\n        const { imageUrl } = this.state;\n\n        const props = {\n            name: \"avatar\",\n            showUploadList: false,//设置只上传一张图片，根据实际情况修改\n            customRequest: info => {//手动上传\n                const formData = new FormData();\n                formData.append('filename', info.file);//名字和后端接口名字对应\n                formData.append('recognize_type', \"1\");\n                reqwest({\n                    url: 'http://www.icube.fun:8000/image_recognize/',//上传url\n                    method: 'post',\n                    processData: false,\n                    data: formData,\n                    success: (res) => {//上传成功回调\n                        message.success(\"success\");\n                        if (res.statusCode === '0') {\n                            this.setState({\n                                imageUrl: res.imageUrl,\n                            });\n                            responseData.tag = res.messageDetail.result[0].\n                            message.success('上传成功！');\n                        }\n                    },\n                    error: () => {//上传失败回调\n                        message.error('上传失败！');\n                    },\n                });\n            },\n            onRemove: file => {//删除图片调用\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            listType: \"picture-card\",\n            className: \"avatar-uploader\",\n\n            beforeUpload: file => {//控制上传图片格式\n                const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n                if (!isJpgOrPng) {\n                    message.error('您只能上传JPG/PNG 文件!');\n                    return;\n                }\n                const isLt2M = file.size / 1024 / 1024 < 2;\n                if (!isLt2M) {\n                    message.error('图片大小必须小于2MB!');\n                    return;\n                }\n                return isJpgOrPng && isLt2M;\n            },\n        };\n        return (\n            <div>\n                <Upload {...props}>\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> :     uploadButton}\n                </Upload>\n                <Card title=\"这张图片的标签有\" bordered={false} style={{ width: 300 ,marginLeft:500,background: '#ECECEC'}}>\n                    <p>{responseData.root}</p>\n                </Card>\n            </div>\n        )\n    }\n\n\n}\n\nconst WrappedDemo2 = Form.create({ name: 'validate_other' })(Demo);\nexport default WrappedDemo2;"]},"metadata":{},"sourceType":"module"}
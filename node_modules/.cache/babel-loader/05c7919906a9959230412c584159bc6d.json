{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/tagImage.js\";\nimport React from \"react\";\nconst Option = _Select.Option;\nconst Meta = _Card.Meta;\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.normFile = e => {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 14\n      }\n    };\n    return React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      label: \"\\u4E0A\\u4F20\\u56FE\\u7247\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, getFieldDecorator('dragger', {\n      valuePropName: 'fileList',\n      getValueFromEvent: this.normFile\n    })(React.createElement(_Upload.Dragger, {\n      name: \"files\",\n      action: \"/upload.do\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"inbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Click or drag file to this area to upload\")))), React.createElement(_Form.Item, {\n      wrapperCol: {\n        span: 12,\n        offset: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      style: {\n        background: '#ECECEC',\n        padding: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"\\u56FE\\u7247\\u6807\\u7B7E\",\n      bordered: false,\n      style: {\n        width: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Card content\"))));\n  }\n\n}\n\nconst WrappedDemo2 = _Form.create({\n  name: 'validate_other'\n})(Demo);\n\nexport default WrappedDemo2;","map":{"version":3,"sources":["/Users/chenanran/WebstormProjects/iCube-master/src/AILab/imgProcess/tagImage.js"],"names":["React","Option","Meta","Demo","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","normFile","Array","isArray","fileList","render","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","valuePropName","getValueFromEvent","offset","background","padding","width","WrappedDemo2","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Icon,\n    Rate,\n    Checkbox,\n    Row,\n    Col,\n    Card,\n} from 'antd';\n\nconst { Option } = Select;\nconst { Meta } = Card;\n\nclass Demo extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    normFile = e => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                <Form.Item label=\"上传图片\">\n                    {getFieldDecorator('dragger', {\n                        valuePropName: 'fileList',\n                        getValueFromEvent: this.normFile,\n                    })(\n                        <Upload.Dragger name=\"files\" action=\"/upload.do\">\n                            <p className=\"ant-upload-drag-icon\">\n                                <Icon type=\"inbox\" />\n                            </p>\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        </Upload.Dragger>,\n                    )}\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n                <div style={{ background: '#ECECEC', padding: '30px' }}>\n                    <Card title=\"图片标签\" bordered={false} style={{ width: 300 }}>\n                        <p>Card content</p>\n                    </Card>\n                </div>\n\n            </Form>\n        );\n    }\n}\n\nconst WrappedDemo2 = Form.create({ name: 'validate_other' })(Demo);\nexport default WrappedDemo2;"]},"metadata":{},"sourceType":"module"}